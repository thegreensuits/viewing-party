buildscript {
  repositories {
    mavenCentral()
    mavenLocal()

    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }

  dependencies {
    classpath 'com.github.johnrengelman:shadow:8.1.1'
  }
}

plugins {
  //id 'com.github.spotless-java' version '6.22.0'
  id('java')
  id('idea')
  id('io.ebean') version '13.25.0'
}

group 'fr.thegreensuits'
version '1.0'

def targetJavaVersion = 17
java {
  def javaVersion = JavaVersion.toVersion(targetJavaVersion)
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
  if (JavaVersion.current() < javaVersion) {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
  }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply from: rootProject.file('install-git-hooks.gradle')

compileJava.options.encoding = 'UTF-8'

repositories {
  mavenCentral()
  mavenLocal()

  maven {
    url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

    content {
      includeGroup 'org.spigotmc'
    }
  }
}

dependencies {
  // - Minecraft
  shadow group: 'org.spigotmc', name: 'spigot-api', version: '1.18.2-R0.1-SNAPSHOT'

  // - Database
  implementation group: 'io.ebean', name: 'ebean', version: '13.25.0'
  annotationProcessor group: 'io.ebean', name: 'ebean', version: '13.25.0'
  testImplementation group: 'io.ebean', name: 'ebean-test', version: '13.25.0'

  // - Utilities
  implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

  // - Tests
  testImplementation group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
}

tasks.withType(JavaCompile).configureEach {
  if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
    options.release = targetJavaVersion
  }
}

processResources {
  def props = [version: version]
  inputs.properties props
  filteringCharset 'UTF-8'
  filesMatching('plugin.yml') {
    expand props
  }
}

/* spotless {
   format 'misc', {
        target '*.gradle', '*.md', '.gitignore'

        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
        setEncoding('utf-8')
   }

   java {
        importOrder()
        removeUnusedImports()

        googleJavaFormat()

        formatAnnotations()

        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
        setEncoding('utf-8')
   }
} */